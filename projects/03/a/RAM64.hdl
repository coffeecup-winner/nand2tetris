// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
  IN in[16], load, address[6];
  OUT out[16];

  PARTS:
    DMux8Way(in = load, sel = address[3..5],
             a = l0, b = l1, c = l2, d = l3,
             e = l4, f = l5, g = l6, h = l7);
    RAM8(in = in, load = l0, address = address[0..2], out = v0);
    RAM8(in = in, load = l1, address = address[0..2], out = v1);
    RAM8(in = in, load = l2, address = address[0..2], out = v2);
    RAM8(in = in, load = l3, address = address[0..2], out = v3);
    RAM8(in = in, load = l4, address = address[0..2], out = v4);
    RAM8(in = in, load = l5, address = address[0..2], out = v5);
    RAM8(in = in, load = l6, address = address[0..2], out = v6);
    RAM8(in = in, load = l7, address = address[0..2], out = v7);
    Mux8Way16(a = v0, b = v1, c = v2, d = v3,
              e = v4, f = v5, g = v6, h = v7,
              sel = address[3..5], out = out);
}
